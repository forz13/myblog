<?php

namespace Blogger\BlogBundle\Entity\Repository;

use Blogger\BlogBundle\Entity\Blog;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\EntityRepository;

/**
 * BlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogRepository extends EntityRepository
{
    /**
     * @param null $limit
     * @return array
     */
    public function getLatestBlogs($limit = null)
    {
        $qb = $this->createQueryBuilder('b')
            ->select('b')
            ->addOrderBy('b.created', 'DESC');

        if (false === is_null($limit))
            $qb->setMaxResults($limit);

        return $qb->getQuery()
            ->getResult();
    }


    /**
     * @param int $limit
     * @return array
     */
    public function getMostCommented($limit = 5)
    {
        $em = $this->getEntityManager();
        $rsm = new ResultSetMapping();
        $rsm->addEntityResult(Blog::class, 'b');
        $rsm->addFieldResult('b', 'id', 'id');
        $rsm->addFieldResult('b', 'title', 'title');
        $rsm->addFieldResult('b', 'blog', 'blog');
        $rsm->addFieldResult('b', 'image', 'image');
        $sql = 'select * from blog b
          inner join (
                  select blog_id, count(*) AS commentCount
                  from comment
                  group by blog_id
               ) c
           on b.id = c.blog_id
           order by c.commentCount desc
           limit ?';
        $query = $em->createNativeQuery($sql, $rsm);
        $query->setParameter(1, $limit);
        return $query->getResult();
    }

}
